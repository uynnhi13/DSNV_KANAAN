<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btBack.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsIAAA7CARUoSoAAAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwa
        AAAD+ElEQVR4XuWbS2xNQRjHW882okioIiSlGtFV67nwXgrtRiy6sBAJIUhqYSESrLAqC4kgQVjQELWQ
        EAuRIFLinYhUQqLxiEhEaepVv2/O1+jt7bn3POa+5v6S36I9M9+Z/6hz7sw5tyQf6OvrG4bV+mNxQfBa
        fIBCs/66OCDwBvxmonvs10NuQ9AKPGciJ+L+BBByIXaauMm4OwGEK8Wd+FOS+uDmBBBsMl43EVPj3gQQ
        qgk/m3jpcWcCCFOGR/CvJAuIGxNAkLn4xEQKR+FPACHk3v7dxAlP4U4Agx+PF0yM6BTmBDDwlfjORIhH
        YU0AAx6B+/C3jN4ChTMBDHYm3jPDtsdRnIrj9DT5CQNsxq+YSX7gC2xH+StbixU6hNzAAMbiacwVv/A2
        ykfqKh1WduCE8/EV5gty3bmMy3SImYET9C9iejFfuYvLdcj2oGglXpMzFAgXsVKHHw8KrcaPUrXAkIVX
        o8YID51HYyuGWcTkGzL2wzhMYwWDDnPwEbrCJSzXeKmhoSxiuqWXY9zAMo2ZDAdlEdMmLR3mCg7934ED
        z0wT9zmkkRPhQId3vCho0tj/4Zfy8faMOew+clufpNET4cA6/CKtHOekRk6Gg9UoHytd5g/Wa+RkOGh7
        kyMfadO4/tBoKb41zd1D/nFnaVR/aCQPMc9LDwcJvv1G44048DG2C3RqvGDQwcUL5GyNFww6jEJZZcmV
        1AW2aLRw0HEV2ngOkGuOa6Tw0HkiXjVl7CF/XbItLsvyJbgZj+FDzMT+xB2NEw0KyH7hNpQtbBv4Xpk5
        NgN3oGyV2+KNlo8HherwqSkZj7S3JtrIK3XyzoGNjZtuLRsfisn7AAcxzgUy8L2ZtvKJdTf2SMeI9Go5
        e1B0DX4y5cMT+tkgfRZg1M3bHi1jFwpPwSDvBA0m9AQI9KvBKB/bu7SEfSguF8hdGOaBSqQJEOhbj2Ev
        xh3aPXNwkgZ8aU6XnsgTINB/k1cmMGe1a2bhRGPwhDllauJOgNwhHptKwWjRrtmBE6bbdYo1AQI1Gr1S
        gWjQbtmDk07HW+b0ydiYgJEYZGvvPZZqt+zCiYfjHpTn/QOJPQECdYK8rNWqzXMHg1iMr81wPGxNwAGv
        XEr89wWzCQORXSfZlpcNFyvP+KmzFVNxU5u6CQFbvJy+rNCmbkJAWVb70a7N3IWQfncZeYW3Rpu5CQEn
        oN8Kcbs2cxcJ6WVNQnavcnPfzxYELMehVoWyFsnvt09tQMi9Jm4iXej+lzIJuQgHL70/YJ02cRdCVuHg
        P335uVabuAshZXv+uSQewH2cpk3chqCDH9edQv+3wlyCoLLt1v8tVFkCr9dDxQOh5R2neRjhuwQlJf8A
        9cu5HHwNyS4AAAAASUVORK5CYII=
</value>
  </data>
</root>